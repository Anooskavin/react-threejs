{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/Geometry.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'dat.gui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Geometry extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setClearColor(0xFDD023, 1);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    camera.position.z = 5;\n    var boxGeometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 16);\n    var boxMaterial = new THREE.MeshNormalMaterial({// wireframe : true\n    });\n    var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n    boxMesh.position.x = -1;\n    scene.add(boxMesh);\n    new OrbitControls(camera, renderer.domElement);\n    const al = new THREE.AmbientLight(0xffffff, 0.5);\n    const mainGroup = new THREE.Group();\n    mainGroup.position.y = 0.5;\n    test.scene.add(mainGroup);\n    mainGroup.add(al); // set up ambient light gui\n\n    const alFolder = gui.addFolder('ambient light');\n    const alSettings = {\n      color: al.color.getHex()\n    };\n    alFolder.add(al, 'visible');\n    alFolder.add(al, 'intensity', 0, 1, 0.1);\n    alFolder.addColor(alSettings, 'color').onChange(value => al.color.set(value));\n    alFolder.open(); // setup directional light + helper\n\n    const dl = new THREE.DirectionalLight(0xffffff, 0.5); // use this for YouTube thumbnail\n\n    dl.position.set(0, 2, 2); // dl.position.set(0, 2, 0);\n\n    dl.castShadow = true;\n    const dlHelper = new THREE.DirectionalLightHelper(dl, 3);\n    mainGroup.add(dl); // mainGroup.add(dlHelper);\n    // set up directional light gui\n\n    const dlSettings = {\n      visible: true,\n      color: dl.color.getHex()\n    };\n    const dlFolder = gui.addFolder('directional light');\n    dlFolder.add(dlSettings, 'visible').onChange(value => {\n      dl.visible = value;\n      dlHelper.visible = value;\n    });\n    dlFolder.add(dl, 'intensity', 0, 1, 0.25);\n    dlFolder.add(dl.position, 'y', 1, 4, 0.5);\n    dlFolder.add(dl, 'castShadow');\n    dlFolder.addColor(dlSettings, 'color').onChange(value => dl.color.set(value));\n    dlFolder.open(); // set up spot light + helper\n\n    const sl = new THREE.SpotLight(0x00ff00, 1, 8, Math.PI / 8, 0);\n    sl.position.set(0, 2, 2);\n    const slHelper = new THREE.SpotLightHelper(sl);\n    mainGroup.add(sl, slHelper); // set up spot light gui\n\n    const slSettings = {\n      visible: true\n    };\n    const slFolder = gui.addFolder('spot light');\n    slFolder.add(slSettings, 'visible').onChange(value => {\n      sl.visible = value;\n      slHelper.visible = value;\n    });\n    slFolder.add(sl, 'intensity', 0, 4, 0.5);\n    slFolder.add(sl, 'angle', Math.PI / 16, Math.PI / 2, Math.PI / 16);\n    slFolder.add(sl, 'castShadow');\n    slFolder.open();\n    const pl = new THREE.PointLight(0xffffff, 1, 8, 2);\n    pl.position.set(2, 2, 2);\n    const plHelper = new THREE.PointLightHelper(pl, 0.5);\n    mainGroup.add(pl, plHelper); // set up point light gui\n\n    const plSettings = {\n      visible: true,\n      color: pl.color.getHex()\n    };\n    const plFolder = gui.addFolder('point light');\n    plFolder.add(plSettings, 'visible').onChange(value => {\n      pl.visible = value;\n      plHelper.visible = value;\n    });\n    plFolder.add(pl, 'intensity', 0, 2, 0.25);\n    plFolder.add(pl.position, 'x', -2, 4, 0.5);\n    plFolder.add(pl.position, 'y', -2, 4, 0.5);\n    plFolder.add(pl.position, 'z', -2, 4, 0.5);\n    plFolder.add(pl, 'castShadow');\n    plFolder.addColor(plSettings, 'color').onChange(value => pl.color.set(value));\n    plFolder.open();\n    const gui = new GUI();\n    const geometryFolder = gui.addFolder(\"Mesh Geometry\");\n    geometryFolder.open();\n    const rotationFolder = geometryFolder.addFolder(\"Rotation\");\n    rotationFolder.add(boxMesh.rotation, 'x', 0, Math.PI).name('Rotate X axis');\n    rotationFolder.add(boxMesh.rotation, 'y', 0, Math.PI).name('Rotate Y axis');\n    rotationFolder.add(boxMesh.rotation, 'z', 0, Math.PI).name('Rotate Z axis');\n    const scaleFolder = geometryFolder.addFolder(\"Scale\");\n    scaleFolder.add(boxMesh.scale, 'x', 0, 2).name('Scale X axis');\n    scaleFolder.add(boxMesh.scale, 'y', 0, 2).name('Scale Y axis');\n    scaleFolder.add(boxMesh.scale, 'z', 0, 2).name('Scale Z axis'); // const materialParams = {\n    //       boxMeshColor: boxMesh.material.color.getHex(),\n    //     };\n    //     gui.add(boxMesh.material, 'wireframe');\n    //     gui\n    //       .addColor(materialParams, 'boxMeshColor')\n    //       .onChange((value) => boxMesh.material.color.set(value));\n\n    renderer.render(scene, camera); // var animate = function (){\n    //     boxMesh.rotation.x += .01\n    //     boxMesh.rotation.y += .01\n    //     requestAnimationFrame(animate)\n    //     renderer.render(scene, camera)\n    // }\n    // animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 100,\n        height: 100\n      },\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Geometry; // const Circlegeometry = new THREE.CircleGeometry(3,6);\n// const Circlematerial = new THREE.MeshBasicMaterial({ color: 0xffffff});\n// const Circle = new THREE.Mesh(Circlegeometry, Circlematerial);\n// scene.add(Circle)\n// const Cubegeometry = new THREE.BoxGeometry(1, 1, 1,1,1);\n// const Cubematerial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n// const cube = new THREE.Mesh(Cubegeometry, Cubematerial);\n// scene.add(cube)\n// const Conegeometry = new THREE.ConeGeometry(1,1);\n// const Conematerial = new THREE.MeshBasicMaterial({ color: 0x789456 });\n// const Cone = new THREE.Mesh(Conegeometry, Conematerial);\n// scene.add(Cone)\n// const Ringgeometry = new THREE.RingGeometry(1,2);\n// const Ringmaterial = new THREE.MeshBasicMaterial({ color: 0xcf8804 });\n// const Ring = new THREE.Mesh(Ringgeometry, Ringmaterial);\n// scene.add(Ring)","map":{"version":3,"names":["React","Component","THREE","OrbitControls","GUI","Geometry","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setClearColor","setSize","mount","appendChild","domElement","position","z","boxGeometry","BoxGeometry","boxMaterial","MeshNormalMaterial","boxMesh","Mesh","x","add","al","AmbientLight","mainGroup","Group","y","test","alFolder","gui","addFolder","alSettings","color","getHex","addColor","onChange","value","set","open","dl","DirectionalLight","castShadow","dlHelper","DirectionalLightHelper","dlSettings","visible","dlFolder","sl","SpotLight","Math","PI","slHelper","SpotLightHelper","slSettings","slFolder","pl","PointLight","plHelper","PointLightHelper","plSettings","plFolder","geometryFolder","rotationFolder","rotation","name","scaleFolder","scale","render","width","height","ref"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/Geometry.js"],"sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'dat.gui';\nclass Geometry extends Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        var renderer = new THREE.WebGLRenderer({\n            antialias: true\n        })\n        renderer.setClearColor(0xFDD023, 1);\n        renderer.setSize(window.innerWidth, window.innerHeight)\n        this.mount.appendChild(renderer.domElement)\n        camera.position.z = 5;\n        var boxGeometry = new THREE.BoxGeometry(1,1,1,1,1,16)\n        var boxMaterial = new THREE.MeshNormalMaterial ({\n            // wireframe : true\n        })\n        var boxMesh = new THREE.Mesh(boxGeometry,boxMaterial)\n        boxMesh.position.x =-1;\n        scene.add(boxMesh)\n        new OrbitControls(camera,renderer.domElement)\n\n        const al = new THREE.AmbientLight(0xffffff, 0.5);\n        const mainGroup = new THREE.Group();\n        mainGroup.position.y = 0.5;\n        test.scene.add(mainGroup);\n\n    mainGroup.add(al);\n\n    // set up ambient light gui\n    const alFolder = gui.addFolder('ambient light');\n    const alSettings = { color: al.color.getHex() };\n    alFolder.add(al, 'visible');\n    alFolder.add(al, 'intensity', 0, 1, 0.1);\n    alFolder\n      .addColor(alSettings, 'color')\n      .onChange((value) => al.color.set(value));\n    alFolder.open();\n\n    // setup directional light + helper\n    const dl = new THREE.DirectionalLight(0xffffff, 0.5);\n    // use this for YouTube thumbnail\n    dl.position.set(0, 2, 2);\n    // dl.position.set(0, 2, 0);\n    dl.castShadow = true;\n    const dlHelper = new THREE.DirectionalLightHelper(dl, 3);\n    mainGroup.add(dl);\n    // mainGroup.add(dlHelper);\n\n    // set up directional light gui\n    const dlSettings = {\n      visible: true,\n      color: dl.color.getHex(),\n    };\n    const dlFolder = gui.addFolder('directional light');\n    dlFolder.add(dlSettings, 'visible').onChange((value) => {\n      dl.visible = value;\n      dlHelper.visible = value;\n    });\n    dlFolder.add(dl, 'intensity', 0, 1, 0.25);\n    dlFolder.add(dl.position, 'y', 1, 4, 0.5);\n    dlFolder.add(dl, 'castShadow');\n    dlFolder\n      .addColor(dlSettings, 'color')\n      .onChange((value) => dl.color.set(value));\n    dlFolder.open();\n\n    // set up spot light + helper\n    const sl = new THREE.SpotLight(0x00ff00, 1, 8, Math.PI / 8, 0);\n    sl.position.set(0, 2, 2);\n    const slHelper = new THREE.SpotLightHelper(sl);\n    mainGroup.add(sl, slHelper);\n\n    // set up spot light gui\n    const slSettings = {\n      visible: true,\n    };\n    const slFolder = gui.addFolder('spot light');\n    slFolder.add(slSettings, 'visible').onChange((value) => {\n      sl.visible = value;\n      slHelper.visible = value;\n    });\n    slFolder.add(sl, 'intensity', 0, 4, 0.5);\n    slFolder.add(sl, 'angle', Math.PI / 16, Math.PI / 2, Math.PI / 16);\n    slFolder.add(sl, 'castShadow');\n    slFolder.open();\n\n    const pl = new THREE.PointLight(0xffffff, 1, 8, 2);\n    pl.position.set(2, 2, 2);\n    const plHelper = new THREE.PointLightHelper(pl, 0.5);\n    mainGroup.add(pl, plHelper);\n\n    // set up point light gui\n    const plSettings = {\n      visible: true,\n      color: pl.color.getHex(),\n    };\n    const plFolder = gui.addFolder('point light');\n    plFolder.add(plSettings, 'visible').onChange((value) => {\n      pl.visible = value;\n      plHelper.visible = value;\n    });\n    plFolder.add(pl, 'intensity', 0, 2, 0.25);\n    plFolder.add(pl.position, 'x', -2, 4, 0.5);\n    plFolder.add(pl.position, 'y', -2, 4, 0.5);\n    plFolder.add(pl.position, 'z', -2, 4, 0.5);\n    plFolder.add(pl, 'castShadow');\n    plFolder\n      .addColor(plSettings, 'color')\n      .onChange((value) => pl.color.set(value));\n    plFolder.open();\n\n        const gui = new GUI();\n        const geometryFolder = gui.addFolder(\"Mesh Geometry\")\n        geometryFolder.open()\n        const rotationFolder = geometryFolder.addFolder(\"Rotation\")\n        rotationFolder.add(boxMesh.rotation,'x',0,Math.PI).name('Rotate X axis')\n        rotationFolder.add(boxMesh.rotation,'y',0,Math.PI).name('Rotate Y axis')\n        rotationFolder.add(boxMesh.rotation,'z',0,Math.PI).name('Rotate Z axis')\n        const scaleFolder = geometryFolder.addFolder(\"Scale\")\n        scaleFolder.add(boxMesh.scale,'x',0,2).name('Scale X axis')\n        scaleFolder.add(boxMesh.scale,'y',0,2).name('Scale Y axis')\n        scaleFolder.add(boxMesh.scale,'z',0,2).name('Scale Z axis')\n\n        // const materialParams = {\n        //       boxMeshColor: boxMesh.material.color.getHex(),\n        //     };\n        //     gui.add(boxMesh.material, 'wireframe');\n        //     gui\n        //       .addColor(materialParams, 'boxMeshColor')\n        //       .onChange((value) => boxMesh.material.color.set(value));\n\n        renderer.render(scene, camera)\n\n\n\n        // var animate = function (){\n        //     boxMesh.rotation.x += .01\n        //     boxMesh.rotation.y += .01\n        //     requestAnimationFrame(animate)\n        //     renderer.render(scene, camera)\n\n        // }\n        // animate();\n\n    }\n    render() {\n        return (\n            <div\n                style={{ width: (100), height: (100), }}\n                ref={ref => this.mount = ref}></div>\n        );\n    }\n}\n\nexport default Geometry;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // const Circlegeometry = new THREE.CircleGeometry(3,6);\n        // const Circlematerial = new THREE.MeshBasicMaterial({ color: 0xffffff});\n        // const Circle = new THREE.Mesh(Circlegeometry, Circlematerial);\n        // scene.add(Circle)\n\n        // const Cubegeometry = new THREE.BoxGeometry(1, 1, 1,1,1);\n        // const Cubematerial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        // const cube = new THREE.Mesh(Cubegeometry, Cubematerial);\n        // scene.add(cube)\n\n        // const Conegeometry = new THREE.ConeGeometry(1,1);\n        // const Conematerial = new THREE.MeshBasicMaterial({ color: 0x789456 });\n        // const Cone = new THREE.Mesh(Conegeometry, Conematerial);\n        // scene.add(Cone)\n\n\n\n        // const Ringgeometry = new THREE.RingGeometry(1,2);\n        // const Ringmaterial = new THREE.MeshBasicMaterial({ color: 0xcf8804 });\n        // const Ring = new THREE.Mesh(Ringgeometry, Ringmaterial);\n        // scene.add(Ring)"],"mappings":"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"},"metadata":{},"sourceType":"module"}