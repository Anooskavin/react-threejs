{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/blenderModel.js\";\nimport React, { Component } from 'react';\nimport * as THREE from \"three\"; // import GLTFLoader from 'three-gltf-loader';\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'; // import { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader.js';\n// import { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\n// import { DRACOLoader } from 'https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js';\n// import file from \"../public/\";\n// import { OrbitControls } from './jsm/controls/OrbitControls.js';\n// import { GLTFLoader } from './jsm/loaders/GLTFLoader.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass blenderModel extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.2, 1000);\n    camera.lookAt(50, 75, 92);\n    var renderer = new THREE.WebGL1Renderer();\n    renderer.setClearColor(0xffffff, 1);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load('play-area.gltf', gltf => {\n      // called when the resource is loaded\n      scene.add(gltf.scene);\n    }, xhr => {\n      // called while loading is progressing\n      console.log(`${xhr.loaded / xhr.total * 100}% loaded`);\n    }, error => {\n      // called when loading has errors\n      console.error('An error happened', error);\n    });\n    renderer.render(scene, camera);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default blenderModel;","map":{"version":3,"names":["React","Component","THREE","GLTFLoader","blenderModel","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","lookAt","renderer","WebGL1Renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","mount","appendChild","domElement","loader","load","gltf","add","xhr","console","log","loaded","total","error","render","ref"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/blenderModel.js"],"sourcesContent":["\n\nimport React, { Component } from 'react';\nimport * as THREE from \"three\";\n// import GLTFLoader from 'three-gltf-loader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n// import { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader.js';\n// import { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\n// import { DRACOLoader } from 'https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js';\n// import file from \"../public/\";\n// import { OrbitControls } from './jsm/controls/OrbitControls.js';\n// import { GLTFLoader } from './jsm/loaders/GLTFLoader.js';\n\n\nclass blenderModel extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / (window.innerHeight), 0.2, 1000);\n    camera.lookAt(50, 75, 92);\n    var renderer = new THREE.WebGL1Renderer();\n    renderer.setClearColor(0xffffff, 1);\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, (window.innerHeight));\n    this.mount.appendChild(renderer.domElement);\n    const loader = new GLTFLoader();\n    loader.load(\n      'play-area.gltf',\n      (gltf) => {\n        // called when the resource is loaded\n        scene.add(gltf.scene);\n      },\n      (xhr) => {\n        // called while loading is progressing\n        console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`);\n      },\n      (error) => {\n        // called when loading has errors\n        console.error('An error happened', error);\n      },\n    );\n    renderer.render(scene, camera);\n\n\n  }\n\n\n\n  render() {\n    return (\n\n      <div ref={ref => (this.mount = ref)}>\n\n      </div>\n    );\n  }\n}\n\nexport default blenderModel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0CAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;EACnCI,iBAAiB,GAAG;IAClB,IAAIC,KAAK,GAAG,IAAIJ,KAAK,CAACK,KAAV,EAAZ;IACA,IAAIC,MAAM,GAAG,IAAIN,KAAK,CAACO,iBAAV,CAA4B,EAA5B,EAAgCC,MAAM,CAACC,UAAP,GAAqBD,MAAM,CAACE,WAA5D,EAA0E,GAA1E,EAA+E,IAA/E,CAAb;IACAJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;IACA,IAAIC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,cAAV,EAAf;IACAD,QAAQ,CAACE,aAAT,CAAuB,QAAvB,EAAiC,CAAjC;IACAF,QAAQ,CAACG,aAAT,CAAuBP,MAAM,CAACQ,gBAA9B;IACAJ,QAAQ,CAACK,OAAT,CAAiBT,MAAM,CAACC,UAAxB,EAAqCD,MAAM,CAACE,WAA5C;IACA,KAAKQ,KAAL,CAAWC,WAAX,CAAuBP,QAAQ,CAACQ,UAAhC;IACA,MAAMC,MAAM,GAAG,IAAIpB,UAAJ,EAAf;IACAoB,MAAM,CAACC,IAAP,CACE,gBADF,EAEGC,IAAD,IAAU;MACR;MACAnB,KAAK,CAACoB,GAAN,CAAUD,IAAI,CAACnB,KAAf;IACD,CALH,EAMGqB,GAAD,IAAS;MACP;MACAC,OAAO,CAACC,GAAR,CAAa,GAAGF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAjB,GAAyB,GAAK,UAA9C;IACD,CATH,EAUGC,KAAD,IAAW;MACT;MACAJ,OAAO,CAACI,KAAR,CAAc,mBAAd,EAAmCA,KAAnC;IACD,CAbH;IAeAlB,QAAQ,CAACmB,MAAT,CAAgB3B,KAAhB,EAAuBE,MAAvB;EAGD;;EAIDyB,MAAM,GAAG;IACP,oBAEE;MAAK,GAAG,EAAEC,GAAG,IAAK,KAAKd,KAAL,GAAac;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFF;EAMD;;AAxCkC;;AA2CrC,eAAe9B,YAAf"},"metadata":{},"sourceType":"module"}