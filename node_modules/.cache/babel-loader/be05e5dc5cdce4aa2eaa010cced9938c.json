{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/GeometryTexture.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GeometryTexture extends Component {\n  componentDidMount() {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var texture = THREE.ImageUtils.loadTexture('space.jpeg');\n    var backgroundMesh = new THREE.Mesh(new THREE.PlaneGeometry(2, 2, 0), new THREE.MeshBasicMaterial({\n      map: texture\n    }));\n    backgroundMesh.material.depthTest = false;\n    backgroundMesh.material.depthWrite = false; // Create your background scene\n\n    var backgroundScene = new THREE.Scene();\n    var backgroundCamera = new THREE.Camera();\n    backgroundScene.add(backgroundCamera);\n    backgroundScene.add(backgroundMesh); // Box \n\n    const box1 = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    const mesh1 = new THREE.MeshBasicMaterial({\n      color: 0x632514\n    });\n    const boxMesh1 = new THREE.Mesh(box1, mesh1);\n    camera.position.z = 5;\n    boxMesh1.position.x = 1;\n    boxMesh1.position.y = 0;\n    scene.add(boxMesh1); //Sphere\n\n    const sphere1 = new THREE.SphereGeometry(0.5, 32, 16, 0, 6.283, 0, 3.14);\n    const mesh2 = new THREE.MeshBasicMaterial({\n      color: 0x654123\n    });\n    const sphereMesh1 = new THREE.Mesh(sphere1, mesh2);\n    camera.position.z = 5;\n    sphereMesh1.position.x = -1;\n    sphereMesh1.position.y = 0.5;\n    scene.add(sphereMesh1);\n\n    var animate = function () {\n      sphereMesh1.rotation.x += .01;\n      sphereMesh1.rotation.y += .01;\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n    renderer.render(scene, camera);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GeometryTexture;","map":{"version":3,"names":["React","Component","THREE","GeometryTexture","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","mount","appendChild","domElement","texture","ImageUtils","loadTexture","backgroundMesh","Mesh","PlaneGeometry","MeshBasicMaterial","map","material","depthTest","depthWrite","backgroundScene","backgroundCamera","Camera","add","box1","BoxGeometry","mesh1","color","boxMesh1","position","z","x","y","sphere1","SphereGeometry","mesh2","sphereMesh1","animate","rotation","requestAnimationFrame","render","ref"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/GeometryTexture.js"],"sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\n\nclass GeometryTexture extends Component {\n\n    componentDidMount() {\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 1000)\n        const renderer = new THREE.WebGLRenderer({\n            antialias : true,\n        })\n        renderer.setSize( window.innerWidth, (window.innerHeight) );\n        this.mount.appendChild(renderer.domElement)\n        \n        var texture = THREE.ImageUtils.loadTexture( 'space.jpeg' );\n        var backgroundMesh = new THREE.Mesh(\n            new THREE.PlaneGeometry(2, 2, 0),\n            new THREE.MeshBasicMaterial({\n                map: texture\n            }));\n\n        backgroundMesh .material.depthTest = false;\n        backgroundMesh .material.depthWrite = false;\n\n        // Create your background scene\n        var backgroundScene = new THREE.Scene();\n        var backgroundCamera = new THREE.Camera();\n        backgroundScene .add(backgroundCamera );\n        backgroundScene .add(backgroundMesh );\n\n\n        // Box \n        const box1 = new THREE.BoxGeometry(0.5,0.5,0.5)\n        const mesh1 = new THREE.MeshBasicMaterial({\n            color: 0x632514,\n        })\n        const boxMesh1 = new THREE.Mesh(box1,mesh1)\n        camera.position.z = 5;\n        boxMesh1.position.x = 1\n        boxMesh1.position.y = 0\n        scene.add(boxMesh1)\n\n        //Sphere\n        const sphere1 = new THREE.SphereGeometry(0.5,32,16,0,6.283,0,3.14)\n        const mesh2 = new THREE.MeshBasicMaterial({\n            color: 0x654123 ,\n        })\n        const sphereMesh1 = new THREE.Mesh(sphere1,mesh2)\n        camera.position.z = 5;\n        sphereMesh1.position.x = -1\n        sphereMesh1.position.y = 0.5\n        scene.add(sphereMesh1)\n\n        var animate = function (){\n            sphereMesh1.rotation.x += .01\n            sphereMesh1.rotation.y += .01\n            requestAnimationFrame(animate)\n            renderer.render(scene, camera)\n\n        }\n        animate();\n\n\n        renderer.render(scene,camera)\n\n    }\n\n    render() {\n        return (\n            <div ref={ref => this.mount = ref}>\n            </div>\n        );\n    }\n}\n\nexport default GeometryTexture;"],"mappings":"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"},"metadata":{},"sourceType":"module"}