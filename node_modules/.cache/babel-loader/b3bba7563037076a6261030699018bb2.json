{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/Testthree.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Testthree extends Component {\n  // cube =null;\n  componentDidMount() {\n    //scene -allow you to set up what and where is to be rendered by three. js\n    this.scene = new THREE.Scene(); //renderer - displays the scene onto a HTML Canvas Element\n\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(this.renderer.domElement); //camera - gives a 3d view where things in the distance appear smaller than things up close\n\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.camera.position.z = 5;\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var materail = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, materail);\n    this.scene.add(cube);\n    console.log(\"hai from main \" + this.cube);\n\n    var animation = function () {\n      requestAnimationFrame(this.animation);\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    };\n\n    animation();\n    this.renderer.render(this.scene, this.camera);\n  } // handleWindowResize =() =>{\n  //     this.camera.aspect = window.innerWidth/ window.innerHeight\n  //     this.camera.updateProjectionMatrix();\n  //     this.renderer.setSize(window.innerWidth,window.innerHeight)\n  //     this.renderer.render(this.scene,this.camera)\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mount => {\n        this.mount = mount;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Testthree;","map":{"version":3,"names":["React","Component","THREE","Testthree","componentDidMount","scene","Scene","renderer","WebGLRenderer","setSize","window","innerWidth","innerHeight","mount","appendChild","domElement","camera","PerspectiveCamera","position","z","geometry","BoxGeometry","materail","MeshBasicMaterial","color","cube","Mesh","add","console","log","animation","requestAnimationFrame","rotation","x","y","render"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/Testthree.js"],"sourcesContent":["\nimport React,{Component} from \"react\";\nimport * as THREE from 'three';\nclass Testthree extends Component{\n\n    // cube =null;\n\n    componentDidMount(){\n\n        //scene -allow you to set up what and where is to be rendered by three. js\n\n        this.scene = new THREE.Scene();\n\n        //renderer - displays the scene onto a HTML Canvas Element\n\n        this.renderer =new THREE.WebGLRenderer();\n        this.renderer.setSize(window.innerWidth,window.innerHeight)\n\n\n        this.mount.appendChild(this.renderer.domElement)\n\n        //camera - gives a 3d view where things in the distance appear smaller than things up close\n\n        this.camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000)\n        this.camera.position.z=5;\n\n        var geometry = new THREE.BoxGeometry(1,1,1)\n        var materail = new THREE.MeshBasicMaterial({\n            color: 0x00ff00\n        })\n        var cube = new THREE.Mesh(geometry,materail)\n        this.scene.add(cube)\n        console.log(\"hai from main \"+ this.cube)\n        var animation = function()  {\n            requestAnimationFrame(this.animation)\n            this.cube.rotation.x += 0.01\n            this.cube.rotation.y += 0.01\n            this.renderer.render(this.scene,this.camera)\n            \n        }\n        animation();\n        this.renderer.render(this.scene,this.camera)\n\n    }\n\n\n    // handleWindowResize =() =>{\n    //     this.camera.aspect = window.innerWidth/ window.innerHeight\n    //     this.camera.updateProjectionMatrix();\n    //     this.renderer.setSize(window.innerWidth,window.innerHeight)\n    //     this.renderer.render(this.scene,this.camera)\n    // }\n\n    \n\n    render(){\n        return(\n            <div ref={\n                mount => {\n                    this.mount=mount;\n\n                }\n            }>\n            </div>\n        )\n    }\n}\nexport default Testthree;"],"mappings":";AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AACA,MAAMC,SAAN,SAAwBF,SAAxB,CAAiC;EAE7B;EAEAG,iBAAiB,GAAE;IAEf;IAEA,KAAKC,KAAL,GAAa,IAAIH,KAAK,CAACI,KAAV,EAAb,CAJe,CAMf;;IAEA,KAAKC,QAAL,GAAe,IAAIL,KAAK,CAACM,aAAV,EAAf;IACA,KAAKD,QAAL,CAAcE,OAAd,CAAsBC,MAAM,CAACC,UAA7B,EAAwCD,MAAM,CAACE,WAA/C;IAGA,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKP,QAAL,CAAcQ,UAArC,EAZe,CAcf;;IAEA,KAAKC,MAAL,GAAc,IAAId,KAAK,CAACe,iBAAV,CAA4B,EAA5B,EAA+BP,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAAxD,EAAoE,GAApE,EAAwE,IAAxE,CAAd;IACA,KAAKI,MAAL,CAAYE,QAAZ,CAAqBC,CAArB,GAAuB,CAAvB;IAEA,IAAIC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,WAAV,CAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,CAAf;IACA,IAAIC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,iBAAV,CAA4B;MACvCC,KAAK,EAAE;IADgC,CAA5B,CAAf;IAGA,IAAIC,IAAI,GAAG,IAAIvB,KAAK,CAACwB,IAAV,CAAeN,QAAf,EAAwBE,QAAxB,CAAX;IACA,KAAKjB,KAAL,CAAWsB,GAAX,CAAeF,IAAf;IACAG,OAAO,CAACC,GAAR,CAAY,mBAAkB,KAAKJ,IAAnC;;IACA,IAAIK,SAAS,GAAG,YAAY;MACxBC,qBAAqB,CAAC,KAAKD,SAAN,CAArB;MACA,KAAKL,IAAL,CAAUO,QAAV,CAAmBC,CAAnB,IAAwB,IAAxB;MACA,KAAKR,IAAL,CAAUO,QAAV,CAAmBE,CAAnB,IAAwB,IAAxB;MACA,KAAK3B,QAAL,CAAc4B,MAAd,CAAqB,KAAK9B,KAA1B,EAAgC,KAAKW,MAArC;IAEH,CAND;;IAOAc,SAAS;IACT,KAAKvB,QAAL,CAAc4B,MAAd,CAAqB,KAAK9B,KAA1B,EAAgC,KAAKW,MAArC;EAEH,CAxC4B,CA2C7B;EACA;EACA;EACA;EACA;EACA;;;EAIAmB,MAAM,GAAE;IACJ,oBACI;MAAK,GAAG,EACJtB,KAAK,IAAI;QACL,KAAKA,KAAL,GAAWA,KAAX;MAEH;IAJL;MAAA;MAAA;MAAA;IAAA,QADJ;EASH;;AA9D4B;;AAgEjC,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}