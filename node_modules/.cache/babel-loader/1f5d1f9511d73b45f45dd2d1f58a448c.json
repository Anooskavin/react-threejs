{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/blenderModel.js\";\nimport React, { Component } from 'react';\nimport * as THREE from \"three\"; // import GLTFLoader from 'three-gltf-loader';\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js'; // import { DRACOLoader } from 'https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js';\n// import file from \"../public/\";\n// import { OrbitControls } from './jsm/controls/OrbitControls.js';\n// import { GLTFLoader } from './jsm/loaders/GLTFLoader.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass blenderModel extends Component {\n  componentDidMount() {\n    let camera, scene, renderer;\n    init();\n    render();\n\n    function init() {\n      const container = document.createElement('div');\n      document.body.appendChild(container);\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.25, 20);\n      camera.position.set(-1.8, 0.6, 2.7);\n      scene = new THREE.Scene(); // model\n\n      const loader = new GLTFLoader().setPath('three-js/src/');\n      loader.load('donut.gltf', function (gltf) {\n        scene.add(gltf.scene);\n        render();\n      });\n      renderer = new THREE.WebGL1Renderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.toneMapping = THREE.ACESFilmicToneMapping;\n      renderer.toneMappingExposure = 1;\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      container.appendChild(renderer.domElement);\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.addEventListener('change', render); // use if there is no animation loop\n\n      controls.minDistance = 2;\n      controls.maxDistance = 10;\n      controls.target.set(0, 0, -0.2);\n      controls.update();\n    } // function onWindowResize() {\n    //     camera.aspect = window.innerWidth / window.innerHeight;\n    //     camera.updateProjectionMatrix();\n    //     renderer.setSize( window.innerWidth, window.innerHeight );\n    //     render();\n    // }\n    //\n\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default blenderModel; // var scene = new THREE.Scene();\n//         var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/(window.innerHeight), 0.2, 1000 );\n//         camera.lookAt( 50,75,92);\n//         var renderer = new THREE.WebGL1Renderer();\n//         renderer.setClearColor( 0xffffff, 1 );\n//         renderer.setPixelRatio(window.devicePixelRatio)\n//         renderer.setSize( window.innerWidth, (window.innerHeight) );\n//         this.mount.appendChild( renderer.domElement );\n//         const loader = new GLTFLoader();\n// loader.load(\n//     'play-area.gltf',\n//     ( gltf ) => {\n//         // called when the resource is loaded\n//         scene.add( gltf.scene );\n//     },\n//     ( xhr ) => {\n//         // called while loading is progressing\n//         console.log( `${( xhr.loaded / xhr.total * 100 )}% loaded` );\n//     },\n//     ( error ) => {\n//         // called when loading has errors\n//         console.error( 'An error happened', error );\n//     },\n// );\n// renderer.render( scene, camera );","map":{"version":3,"names":["React","Component","THREE","GLTFLoader","OrbitControls","blenderModel","componentDidMount","camera","scene","renderer","init","render","container","document","createElement","body","appendChild","PerspectiveCamera","window","innerWidth","innerHeight","position","set","Scene","loader","setPath","load","gltf","add","WebGL1Renderer","antialias","setPixelRatio","devicePixelRatio","setSize","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","domElement","controls","addEventListener","minDistance","maxDistance","target","update","ref","mount"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/blenderModel.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { Component } from 'react';\nimport * as THREE from \"three\";\n// import GLTFLoader from 'three-gltf-loader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {OrbitControls} from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\n// import { DRACOLoader } from 'https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/DRACOLoader.js';\n// import file from \"../public/\";\n// import { OrbitControls } from './jsm/controls/OrbitControls.js';\n// import { GLTFLoader } from './jsm/loaders/GLTFLoader.js';\n\n\nclass blenderModel extends Component {\n    componentDidMount() {\n\n\n        let camera, scene, renderer;\n\n        init();\n        render();\n\n        function init() {\n\n            const container = document.createElement( 'div' );\n            document.body.appendChild( container );\n\n            camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.25, 20 );\n            camera.position.set( - 1.8, 0.6, 2.7 );\n\n            scene = new THREE.Scene();\n\n            \n\n\n                    // model\n\n                    const loader = new GLTFLoader().setPath( 'three-js/src/' );\n                    loader.load( 'donut.gltf', function ( gltf ) {\n\n                        scene.add( gltf.scene );\n\n                        render();\n\n                    } );\n\n             \n\n            renderer = new THREE.WebGL1Renderer( { antialias: true } );\n            renderer.setPixelRatio( window.devicePixelRatio );\n            renderer.setSize( window.innerWidth, window.innerHeight );\n            renderer.toneMapping = THREE.ACESFilmicToneMapping;\n            renderer.toneMappingExposure = 1;\n            renderer.outputEncoding = THREE.sRGBEncoding;\n            container.appendChild( renderer.domElement );\n\n            const controls = new OrbitControls( camera, renderer.domElement );\n            controls.addEventListener( 'change', render ); // use if there is no animation loop\n            controls.minDistance = 2;\n            controls.maxDistance = 10;\n            controls.target.set( 0, 0, - 0.2 );\n            controls.update();\n\n\n        }\n\n        // function onWindowResize() {\n\n        //     camera.aspect = window.innerWidth / window.innerHeight;\n        //     camera.updateProjectionMatrix();\n\n        //     renderer.setSize( window.innerWidth, window.innerHeight );\n\n        //     render();\n\n        // }\n\n        //\n\n        function render() {\n\n            renderer.render( scene, camera );\n\n        }\n\n}\n    render() {\n        return (\n\n            <div ref={ref => (this.mount = ref)}>\n\n            </div>\n        );\n    }\n}\n\nexport default blenderModel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// var scene = new THREE.Scene();\n//         var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/(window.innerHeight), 0.2, 1000 );\n//         camera.lookAt( 50,75,92);\n//         var renderer = new THREE.WebGL1Renderer();\n//         renderer.setClearColor( 0xffffff, 1 );\n//         renderer.setPixelRatio(window.devicePixelRatio)\n//         renderer.setSize( window.innerWidth, (window.innerHeight) );\n//         this.mount.appendChild( renderer.domElement );\n//         const loader = new GLTFLoader();\n// loader.load(\n//     'play-area.gltf',\n//     ( gltf ) => {\n//         // called when the resource is loaded\n//         scene.add( gltf.scene );\n//     },\n//     ( xhr ) => {\n//         // called while loading is progressing\n//         console.log( `${( xhr.loaded / xhr.total * 100 )}% loaded` );\n//     },\n//     ( error ) => {\n//         // called when loading has errors\n//         console.error( 'An error happened', error );\n//     },\n// );\n// renderer.render( scene, camera );"],"mappings":";AAoEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAAQC,aAAR,QAA4B,uGAA5B,C,CACA;AACA;AACA;AACA;;;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;EACjCK,iBAAiB,GAAG;IAGhB,IAAIC,MAAJ,EAAYC,KAAZ,EAAmBC,QAAnB;IAEAC,IAAI;IACJC,MAAM;;IAEN,SAASD,IAAT,GAAgB;MAEZ,MAAME,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAwB,KAAxB,CAAlB;MACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA2BJ,SAA3B;MAEAL,MAAM,GAAG,IAAIL,KAAK,CAACe,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,IAAzE,EAA+E,EAA/E,CAAT;MACAb,MAAM,CAACc,QAAP,CAAgBC,GAAhB,CAAqB,CAAE,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC;MAEAd,KAAK,GAAG,IAAIN,KAAK,CAACqB,KAAV,EAAR,CARY,CAaJ;;MAEA,MAAMC,MAAM,GAAG,IAAIrB,UAAJ,GAAiBsB,OAAjB,CAA0B,eAA1B,CAAf;MACAD,MAAM,CAACE,IAAP,CAAa,YAAb,EAA2B,UAAWC,IAAX,EAAkB;QAEzCnB,KAAK,CAACoB,GAAN,CAAWD,IAAI,CAACnB,KAAhB;QAEAG,MAAM;MAET,CAND;MAURF,QAAQ,GAAG,IAAIP,KAAK,CAAC2B,cAAV,CAA0B;QAAEC,SAAS,EAAE;MAAb,CAA1B,CAAX;MACArB,QAAQ,CAACsB,aAAT,CAAwBb,MAAM,CAACc,gBAA/B;MACAvB,QAAQ,CAACwB,OAAT,CAAkBf,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;MACAX,QAAQ,CAACyB,WAAT,GAAuBhC,KAAK,CAACiC,qBAA7B;MACA1B,QAAQ,CAAC2B,mBAAT,GAA+B,CAA/B;MACA3B,QAAQ,CAAC4B,cAAT,GAA0BnC,KAAK,CAACoC,YAAhC;MACA1B,SAAS,CAACI,WAAV,CAAuBP,QAAQ,CAAC8B,UAAhC;MAEA,MAAMC,QAAQ,GAAG,IAAIpC,aAAJ,CAAmBG,MAAnB,EAA2BE,QAAQ,CAAC8B,UAApC,CAAjB;MACAC,QAAQ,CAACC,gBAAT,CAA2B,QAA3B,EAAqC9B,MAArC,EAnCY,CAmCmC;;MAC/C6B,QAAQ,CAACE,WAAT,GAAuB,CAAvB;MACAF,QAAQ,CAACG,WAAT,GAAuB,EAAvB;MACAH,QAAQ,CAACI,MAAT,CAAgBtB,GAAhB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAAE,GAA7B;MACAkB,QAAQ,CAACK,MAAT;IAGH,CAlDe,CAoDhB;IAEA;IACA;IAEA;IAEA;IAEA;IAEA;;;IAEA,SAASlC,MAAT,GAAkB;MAEdF,QAAQ,CAACE,MAAT,CAAiBH,KAAjB,EAAwBD,MAAxB;IAEH;EAER;;EACGI,MAAM,GAAG;IACL,oBAEI;MAAK,GAAG,EAAEmC,GAAG,IAAK,KAAKC,KAAL,GAAaD;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFJ;EAMH;;AAhFgC;;AAmFrC,eAAezC,YAAf,C,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}