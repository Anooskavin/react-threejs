{"ast":null,"code":"var _jsxFileName = \"/home/anoo/Documents/React/Three-js/three-js/src/Geometry.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'dat.gui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Geometry extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setClearColor(0x000000, 1);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    camera.position.z = 5;\n    var boxGeometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 16);\n    var boxMaterial = new THREE.MeshNormalMaterial({\n      wireframe: true\n    });\n    var boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n    boxMesh.position.x = -1;\n    scene.add(boxMesh);\n    new OrbitControls(camera, renderer.domElement);\n    const gui = new GUI();\n    gui.add(boxMesh.rotation, 'x', 0, Math.PI).name('Rotate X axis');\n    gui.add(boxMesh.rotation, 'y', 0, Math.PI).name('Rotate Y axis');\n    gui.add(boxMesh.rotation, 'z', 0, Math.PI).name('Rotate Z axis');\n    gui.add(boxMesh.scale, 'x', 0, 2).name('Scale X axis');\n    gui.add(boxMesh.scale, 'y', 0, 2).name('Scale Y axis');\n    gui.add(boxMesh.scale, 'z', 0, 2).name('Scale Z axis');\n    const materialParams = {\n      boxMeshColor: boxMesh.material.color.getHex()\n    };\n    gui.add(boxMesh.material, 'wireframe');\n    gui.addColor(materialParams, 'boxMeshColor').onChange(value => boxMesh.material.color.set(value));\n    renderer.render(scene, camera); // var animate = function (){\n    //     boxMesh.rotation.x += .01\n    //     boxMesh.rotation.y += .01\n    //     requestAnimationFrame(animate)\n    //     renderer.render(scene, camera)\n    // }\n    // animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 100,\n        height: 100\n      },\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Geometry; // const Circlegeometry = new THREE.CircleGeometry(3,6);\n// const Circlematerial = new THREE.MeshBasicMaterial({ color: 0xffffff});\n// const Circle = new THREE.Mesh(Circlegeometry, Circlematerial);\n// scene.add(Circle)\n// const Cubegeometry = new THREE.BoxGeometry(1, 1, 1,1,1);\n// const Cubematerial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n// const cube = new THREE.Mesh(Cubegeometry, Cubematerial);\n// scene.add(cube)\n// const Conegeometry = new THREE.ConeGeometry(1,1);\n// const Conematerial = new THREE.MeshBasicMaterial({ color: 0x789456 });\n// const Cone = new THREE.Mesh(Conegeometry, Conematerial);\n// scene.add(Cone)\n// const Ringgeometry = new THREE.RingGeometry(1,2);\n// const Ringmaterial = new THREE.MeshBasicMaterial({ color: 0xcf8804 });\n// const Ring = new THREE.Mesh(Ringgeometry, Ringmaterial);\n// scene.add(Ring)","map":{"version":3,"names":["React","Component","THREE","OrbitControls","GUI","Geometry","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setClearColor","setSize","mount","appendChild","domElement","position","z","boxGeometry","BoxGeometry","boxMaterial","MeshNormalMaterial","wireframe","boxMesh","Mesh","x","add","gui","rotation","Math","PI","name","scale","materialParams","boxMeshColor","material","color","getHex","addColor","onChange","value","set","render","width","height","ref"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/Geometry.js"],"sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'dat.gui';\nclass Geometry extends Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n        var renderer = new THREE.WebGLRenderer({\n            antialias: true\n        })\n        renderer.setClearColor(0x000000, 1);\n        renderer.setSize(window.innerWidth, window.innerHeight)\n        this.mount.appendChild(renderer.domElement)\n        camera.position.z = 5;\n        var boxGeometry = new THREE.BoxGeometry(1,1,1,1,1,16)\n        var boxMaterial = new THREE.MeshNormalMaterial({\n            wireframe : true\n        })\n        var boxMesh = new THREE.Mesh(boxGeometry,boxMaterial)\n        boxMesh.position.x =-1;\n        scene.add(boxMesh)\n        new OrbitControls(camera,renderer.domElement)\n\n        const gui = new GUI();\n\n        gui.add(boxMesh.rotation,'x',0,Math.PI).name('Rotate X axis')\n        gui.add(boxMesh.rotation,'y',0,Math.PI).name('Rotate Y axis')\n        gui.add(boxMesh.rotation,'z',0,Math.PI).name('Rotate Z axis')\n        gui.add(boxMesh.scale,'x',0,2).name('Scale X axis')\n        gui.add(boxMesh.scale,'y',0,2).name('Scale Y axis')\n        gui.add(boxMesh.scale,'z',0,2).name('Scale Z axis')\n\n        const materialParams = {\n              boxMeshColor: boxMesh.material.color.getHex(),\n            };\n            gui.add(boxMesh.material, 'wireframe');\n            gui\n              .addColor(materialParams, 'boxMeshColor')\n              .onChange((value) => boxMesh.material.color.set(value));\n\n        renderer.render(scene, camera)\n\n\n\n        // var animate = function (){\n        //     boxMesh.rotation.x += .01\n        //     boxMesh.rotation.y += .01\n        //     requestAnimationFrame(animate)\n        //     renderer.render(scene, camera)\n\n        // }\n        // animate();\n\n    }\n    render() {\n        return (\n            <div\n                style={{ width: (100), height: (100), }}\n                ref={ref => this.mount = ref}></div>\n        );\n    }\n}\n\nexport default Geometry;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // const Circlegeometry = new THREE.CircleGeometry(3,6);\n        // const Circlematerial = new THREE.MeshBasicMaterial({ color: 0xffffff});\n        // const Circle = new THREE.Mesh(Circlegeometry, Circlematerial);\n        // scene.add(Circle)\n\n        // const Cubegeometry = new THREE.BoxGeometry(1, 1, 1,1,1);\n        // const Cubematerial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        // const cube = new THREE.Mesh(Cubegeometry, Cubematerial);\n        // scene.add(cube)\n\n        // const Conegeometry = new THREE.ConeGeometry(1,1);\n        // const Conematerial = new THREE.MeshBasicMaterial({ color: 0x789456 });\n        // const Cone = new THREE.Mesh(Conegeometry, Conematerial);\n        // scene.add(Cone)\n\n\n\n        // const Ringgeometry = new THREE.RingGeometry(1,2);\n        // const Ringmaterial = new THREE.MeshBasicMaterial({ color: 0xcf8804 });\n        // const Ring = new THREE.Mesh(Ringgeometry, Ringmaterial);\n        // scene.add(Ring)"],"mappings":"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"},"metadata":{},"sourceType":"module"}