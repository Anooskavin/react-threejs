{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nexport default class SceneInit {\n  constructor(canvasId) {\n    // NOTE: Core components to initialize Three.js app.\n    this.scene = undefined;\n    this.camera = undefined;\n    this.renderer = undefined; // NOTE: Camera params;\n\n    this.fov = 45;\n    this.nearPlane = 1;\n    this.farPlane = 1000;\n    this.canvasId = canvasId; // NOTE: Additional components.\n\n    this.clock = undefined;\n    this.stats = undefined;\n    this.controls = undefined; // NOTE: Lighting is basically required.\n\n    this.ambientLight = undefined;\n    this.directionalLight = undefined;\n  }\n\n  initialize() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(this.fov, window.innerWidth / window.innerHeight, 1, 1000);\n    this.camera.position.z = 48; // NOTE: Specify a canvas which is already created in the HTML.\n\n    const canvas = document.getElementById(this.canvasId);\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      // NOTE: Anti-aliasing smooths out the edges.\n      antialias: true\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight); // this.renderer.shadowMap.enabled = true;\n\n    document.body.appendChild(this.renderer.domElement);\n    this.clock = new THREE.Clock();\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.stats = Stats();\n    document.body.appendChild(this.stats.dom); // ambient light which is for the whole scene\n\n    this.ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    this.ambientLight.castShadow = true;\n    this.scene.add(this.ambientLight); // directional light - parallel sun rays\n\n    this.directionalLight = new THREE.DirectionalLight(0xffffff, 2); // this.directionalLight.castShadow = true;\n\n    this.directionalLight.position.set(0, 32, 64);\n    this.scene.add(this.directionalLight); // if window resizes\n\n    window.addEventListener('resize', () => this.onWindowResize(), false); // NOTE: Load space background.\n    // this.loader = new THREE.TextureLoader();\n    // this.scene.background = this.loader.load('./pics/space.jpeg');\n    // NOTE: Declare uniforms to pass into glsl shaders.\n    // this.uniforms = {\n    //   u_time: { type: 'f', value: 1.0 },\n    //   colorB: { type: 'vec3', value: new THREE.Color(0xfff000) },\n    //   colorA: { type: 'vec3', value: new THREE.Color(0xffffff) },\n    // };\n  }\n\n  animate() {\n    // NOTE: Window is implied.\n    // requestAnimationFrame(this.animate.bind(this));\n    window.requestAnimationFrame(this.animate.bind(this));\n    this.render();\n    this.stats.update();\n    this.controls.update();\n  }\n\n  render() {\n    // NOTE: Update uniform data on each render.\n    // this.uniforms.u_time.value += this.clock.getDelta();\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n}","map":{"version":3,"names":["THREE","OrbitControls","Stats","SceneInit","constructor","canvasId","scene","undefined","camera","renderer","fov","nearPlane","farPlane","clock","stats","controls","ambientLight","directionalLight","initialize","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","canvas","document","getElementById","WebGLRenderer","antialias","setSize","body","appendChild","domElement","Clock","dom","AmbientLight","castShadow","add","DirectionalLight","set","addEventListener","onWindowResize","animate","requestAnimationFrame","bind","render","update","aspect","updateProjectionMatrix"],"sources":["/home/anoo/Documents/React/Three-js/three-js/src/SceneInit.js"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/examples/jsm/controls/OrbitControls.js';\nimport Stats from 'three/examples/jsm/libs/stats.module';\n\nexport default class SceneInit {\n  constructor(canvasId) {\n    // NOTE: Core components to initialize Three.js app.\n    this.scene = undefined;\n    this.camera = undefined;\n    this.renderer = undefined;\n\n    // NOTE: Camera params;\n    this.fov = 45;\n    this.nearPlane = 1;\n    this.farPlane = 1000;\n    this.canvasId = canvasId;\n\n    // NOTE: Additional components.\n    this.clock = undefined;\n    this.stats = undefined;\n    this.controls = undefined;\n\n    // NOTE: Lighting is basically required.\n    this.ambientLight = undefined;\n    this.directionalLight = undefined;\n  }\n\n  initialize() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      window.innerWidth / window.innerHeight,\n      1,\n      1000\n    );\n    this.camera.position.z = 48;\n\n    // NOTE: Specify a canvas which is already created in the HTML.\n    const canvas = document.getElementById(this.canvasId);\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      // NOTE: Anti-aliasing smooths out the edges.\n      antialias: true,\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    // this.renderer.shadowMap.enabled = true;\n    document.body.appendChild(this.renderer.domElement);\n\n    this.clock = new THREE.Clock();\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.stats = Stats();\n    document.body.appendChild(this.stats.dom);\n\n    // ambient light which is for the whole scene\n    this.ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    this.ambientLight.castShadow = true;\n    this.scene.add(this.ambientLight);\n\n    // directional light - parallel sun rays\n    this.directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    // this.directionalLight.castShadow = true;\n    this.directionalLight.position.set(0, 32, 64);\n    this.scene.add(this.directionalLight);\n\n    // if window resizes\n    window.addEventListener('resize', () => this.onWindowResize(), false);\n\n    // NOTE: Load space background.\n    // this.loader = new THREE.TextureLoader();\n    // this.scene.background = this.loader.load('./pics/space.jpeg');\n\n    // NOTE: Declare uniforms to pass into glsl shaders.\n    // this.uniforms = {\n    //   u_time: { type: 'f', value: 1.0 },\n    //   colorB: { type: 'vec3', value: new THREE.Color(0xfff000) },\n    //   colorA: { type: 'vec3', value: new THREE.Color(0xffffff) },\n    // };\n  }\n\n  animate() {\n    // NOTE: Window is implied.\n    // requestAnimationFrame(this.animate.bind(this));\n    window.requestAnimationFrame(this.animate.bind(this));\n    this.render();\n    this.stats.update();\n    this.controls.update();\n  }\n\n  render() {\n    // NOTE: Update uniform data on each render.\n    // this.uniforms.u_time.value += this.clock.getDelta();\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}